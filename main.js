const connectButton = document.getElementById('connectRTK');

if (connectButton) {
  if (!('serial' in navigator)) {
  console.error('‚ùå Web Serial API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.');
  alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Web Serial API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ Chrome –Ω–∞ –ü–ö –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.');
  return;
}
  connectButton.addEventListener('click', async () => {
    try {
      // –ó–∞–ø—Ä–æ—Å –ø–æ—Ä—Ç–∞
      const port = await navigator.serial.requestPort();
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç
      await port.open({ baudRate: 115200 });

      console.log('‚úÖ USB-–ø–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç');

      const decoder = new TextDecoderStream();
      const inputDone = port.readable.pipeTo(decoder.writable);
      const inputStream = decoder.readable;

      const reader = inputStream.getReader();

      while (true) {
        const { value, done } = await reader.read();
        if (done) break;
        if (value) {
          console.log('üì° –î–∞–Ω–Ω—ã–µ –æ—Ç RTK:', value);
        }
      }

      reader.releaseLock();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ USB:', error);
    }
  });
}
